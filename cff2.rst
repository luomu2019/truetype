CFF2 — 紧凑字体格式 (CFF) 版本 2
================================

一、简介
--------------------------------

本文档描述了 CFF2 格式。与 CFF 1.0 格式一样，CFF2
允许有效存储字形轮廓和元数据。CFF2 格式与 CFF 版本 1.0
的不同之处在于它不能用作独立的字体程序：它仅用于 OpenType
字体的上下文中作为带有标签\ **CFF2**\ 的“sfnt”表，并且取决于数据在其他
OpenType 表中。所有 1.0 格式的数据与其他表中的数据重复或未在 OpenType
字体的上下文中使用的数据都将被删除。

另一个重要的区别是 CFF2 格式添加了新的运算符，允许 CFF2
表示可变字体的数据：一种字体包含每个字形的几个不同变体的表示，可以混合以产生中间实例。有关可变字体的一般概述以及支持可变字体所需的表格的完整列表，请参阅\ `OpenType
字体变体概述 <otvaroverview>`__\ 一章。

最后，CFF2 格式需要使用 CFF2 CharStrings 而不是 Type 2 CharStrings。这种
CharString 格式与 CFF2
格式本身一样，删除了运算符以减小文件大小，并添加了新的运算符以支持可变字体。有关
CFF2 CharStrings 的更多信息，请参见第 8 节，\ `CharStrings
INDEX <#charStrings>`__\ 。

有关 CFF 格式版本 1.0 和 CFF2 之间差异的完整描述，请参阅附录 D，\ `CFF
1.0 的更改 <#appendixD>`__\ 。

2. 数据布局
----------------------------------

从概念上讲，二进制数据被组织为许多单独的数据结构。二进制数据内的总体布局如表
1
所示。前三个结构占据固定位置。其余部分通过偏移量达到，并且可以更改它们的顺序。

表 1 CFF2 数据布局
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ============== ================================================
   入口           注释
   ============== ================================================
   标题           固定位置
   顶部 DICT      固定位置
   全球次级指数   固定位置
   变体商店       
   FD选择         仅当字体 DICT 索引中存在多个字体 DICT 时才显示。
   字体 DICT 索引 
   字体 DICT 数组 包含在字体 DICT INDEX 中。
   私人 DICT      每个字体 DICT 一个。
   ============== ================================================

附录 A，\ `CFF2 字体示例 <#appendixA>`__\ ，显示了 CFF2 表格的注释示例。

3. 数据类型
---------------------------------

本节介绍 CFF2 格式使用的数据表示和类型。

所有多字节数字数据和偏移字段都以大端字节顺序（高字节低偏移）存储，并且不遵守任何对齐限制。这导致一种没有填充字节的格式。

数据对象通常由相对于 CFF2
数据中某个参考点的字节偏移量指定。这些偏移量的长度为 1 到 4
个字节。在每种情况下都会显示偏移的参考位置。

CFF2表中使用的数据类型如表2所示。

表 2 CFF2 数据类型
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   +--------+-----------------+-----------------------------------------+
   | 姓名   | 范围            | 描述                                    |
   +========+=================+=========================================+
   | uint8  | 0 到 255        | 8 位无符号数                            |
   +--------+-----------------+-----------------------------------------+
   | uint16 | 0 至 65535      | 16 位无符号数                           |
   +--------+-----------------+-----------------------------------------+
   | uint32 | 0 至 4294967295 | 32 位无符号数                           |
   +--------+-----------------+-----------------------------------------+
   | 抵消   | 变化            | 1、2、3 或 4 字节偏移（由索引表中的     |
   |        |                 | OffSize 字段指定）                      |
   +--------+-----------------+-----------------------------------------+
   | 尺寸   | 1到4            | 1                                       |
   |        |                 | 字                                      |
   |        |                 | 节无符号数指定一个或多个偏移字段的大小  |
   +--------+-----------------+-----------------------------------------+

本文档通过列出字段类型、名称和描述来描述数据结构。可以给数据结构一个类型名称并随后进行描述。对象数组由包含数组长度的常用方括号约定表示。

大部分 CFF2 数据包含在称为 DICT 和 INDEX
的两种数据结构中的任何一种中，这两种数据结构将在后续部分中进行描述。

4. DICT 数据
---------------------------------

包含键值对的字体字典数据以紧凑的标记化格式表示，类似于用于表示
CharStrings 的格式。字典键被编码为 1 或 2
字节运算符，字典值被编码为可变大小的数字操作数。运算符前面是指定其值的操作数。DICT
只是串联在一起的操作数/操作符字节序列。共有三种结构使用 DICT
数据格式：Top DICT、Font DICT 和 Private DICT。可以在第 7 节\ `Top
DICT <#topDict>`__\ 、第 10 节\ `Font DICT <#fontDict>`__\ 和第 11
节\ `Private DICT <#privateDict>`__\ 中找到每个 DICT
运算符的列表。\ `附录 C CFF2 DICT 编码 <#appendixC>`__\ 中提供了所有
DICT 运算符的摘要。

定义了许多不同大小的整数操作数类型并按表 3
所示进行编码（操作数的第一个字节是 b0，第二个字节是 b1，依此类推）。

表 3 操作数编码
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   +------+------------+-----------------------+-----------------------+
   | 尺寸 | b0 范围    | 数值范围              | 价值计算              |
   +======+============+=======================+=======================+
   | 1    | 32 至 246  | -107 至 +107          | b0 - 139              |
   +------+------------+-----------------------+-----------------------+
   | 2    | 247 至 250 | +108 至 +1131         | (b0 - 247) \* 256 +   |
   |      |            |                       | b1 + 108              |
   +------+------------+-----------------------+-----------------------+
   | 2    | 251 至 254 | -1131 至 -108         | -（b0 - 251）\* 256 - |
   |      |            |                       | b1 - 108              |
   +------+------------+-----------------------+-----------------------+
   | 3    | 28         | -32768 至 +32767      | b1 << 8 \| b2         |
   +------+------------+-----------------------+-----------------------+
   | 5    | 29         | -(2^31) 到 +(2^31 -   | b1 << 24 \| b2 << 16  |
   |      |            | 1)                    | \| b3 << 8 \| b4      |
   +------+------------+-----------------------+-----------------------+

..

   *注意：* 1、2 和 3 字节整数格式与 CFF2 CharStrings 使用的相同。

整数格式的示例如表 4 所示。

表 4 整数格式示例
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ======= ==============
   价值    编码
   ======= ==============
   0       8b
   100     英夫
   -100    27
   1000    发7c
   10000   1c 27 10
   -10000  1c d8 f0
   100000  1d 00 01 86 a0
   -100000 1d ff fe 79 60
   ======= ==============

除了整数操作数之外，还提供了一个实数操作数。此操作数以字节值 30
开始，后跟可变长度的字节序列。每个字节由表 5 中定义的两个 4
位半字节组成。一对的第一个半字节存储在一个字节的最高有效 4
位中，一对的第二个半字节存储在一个字节的最低有效 4 位中字节。

表 5 半字节定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ======== ============
   半字节值 代表
   ======== ============
   0 到 9   0 到 9
   一个     . （小数点）
   b        乙
   C        电子-
   d        <保留>
   e        - （减）
   F        号码结尾
   ======== ============

一个实数由一个（或两个）0xf
半字节终止，因此它总是填充到一个完整字节。因此，值 -2.25 由字节序列 (1e
e2 a2 5f) 编码，值 0.140541E-3 由序列 (1e 0a 14 05 41 c3 ff) 编码。

运算符和操作数可以通过检查它们的第一个字节来区分。值 28、29、30 和 32 到
254
指定操作数（数字）。所有其他值要么指定一个运算符，要么被保留。可以在运算符之前的最大操作数由当前堆栈限制设置。

一个运算符可能有一个或多个表 6 中所示类型的操作数。

表 6 操作数类型
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ====== =============================================
   类型   描述
   ====== =============================================
   数字   整数或实数
   大批   一个或多个数字
   三角洲 一个数字或一个 delta 编码的数字数组（见下文）
   ====== =============================================

数组或增量类型的长度是通过计算运算符前面的操作数来确定的。增量中的第二个和后续数字被编码为连续值之间的差异。例如，数组\ *a
0 , a 1 , a 2 , ..., a n*\ 将被编码为：\ *a 0 (a 1 - a 0 ) (a 2 - a 1 )
..., (a n - a n-1 )*\ 。

两字节运算符的初始转义字节为 12。

通过为各种 DICT
键建立默认值来进一步压缩字典数据。对于那些具有默认值的键，在 DICT
中缺少相应的运算符意味着键应该采用其默认值。

5. 索引数据
---------------------------------

INDEX
是可变大小对象的数组。它包括标题、偏移量数组和对象数据。偏移量数组指定对象数据内的偏移量。通过索引偏移数组并获取指定偏移处的对象来检索对象。对象的长度可以通过从偏移数组中的下一个偏移中减去其偏移来确定。在偏移数组的末尾添加了一个额外的偏移，因此可以确定最后一个对象的长度。INDEX
格式如表 7 所示。

表 7 索引格式
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ====== ================ ==========================================
   类型   姓名             描述
   ====== ================ ==========================================
   uint32 数数             INDEX 中存储的对象数
   尺寸   尺寸             偏移数组元素大小
   抵消   偏移量 [count+1] 偏移量数组——偏移量来自对象数据之前的字节。
   uint8  数据 [<变量>]    对象数据
   ====== ================ ==========================================

偏移数组中的偏移量与对象数据之前的字节相关。因此偏移数组的第一个元素始终为
1。（这确保了每个对象都有一个相应的偏移量，该偏移量始终为非零，并允许有效地实现动态对象加载。）

空 INDEX 由值为 0 且没有其他字段的计数字段表示。因此，空 INDEX
的总大小为 4 个字节。

   *注意：*\ 可以通过跳转到由偏移数组的最后一个元素指定的偏移来跳过
   INDEX。

6.页眉
------------------------

二进制数据以具有表 8 中所示格式的标头开始。

.. _table-8-header-format:

` <#table-8-header-format>`__\ 表 8 标题格式
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ====== ============= ======================================
   类型   姓名          描述
   uint8  主要版本      格式化主要版本。设置为 2。
   uint8  次要版本      格式化次要版本。设置为零。
   uint8  标头尺寸      标头大小（字节）。
   uint16 topDictLength 顶部 DICT 结构的长度（以字节为单位）。
   ====== ============= ======================================

定位 Top DICT 数据的开头时必须使用 headerSize
字段。提供它以便格式的未来版本可以以与旧实现兼容的方式在 topDictLength
字段和 Top DICT 数据之间引入附加数据。

7. 顶级 DICT 数据
------------------------------------------

这是 CFF2 表的顶级 DICT。

Top DICT 运算符的名称和默认值（如适用）如表 9 所示。

表 9 排名靠前的 DICT 运算符条目
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   +----------+-------+--------+--------------------+--------------------+
   | 姓名     | 价值  | 操作数 | 默认               | 笔记               |
   +==========+=======+========+====================+====================+
   | 字体矩阵 | 12 7  | 大批   | 0.001 0 0 0.001 0  |                    |
   |          |       |        | 0                  |                    |
   +----------+-------+--------+--------------------+--------------------+
   | 字符串   | 17    | 数字   | —                  | CharStrings INDEX  |
   |          |       |        |                    | 偏移量，从 CFF2    |
   |          |       |        |                    | 表的开始。         |
   +----------+-------+--------+--------------------+--------------------+
   | FDArray  | 12 36 | 数字   | —                  | 字体 DICT (FD)     |
   |          |       |        |                    | INDEX 偏移量，从   |
   |          |       |        |                    | CFF2               |
   |          |       |        |                    | 表的开头开始。     |
   +----------+-------+--------+--------------------+--------------------+
   | FD选择   | 12 37 | 数字   | —                  | FDSelect           |
   |          |       |        |                    | 结构偏移，从 CFF2  |
   |          |       |        |                    | 表的开始。         |
   +----------+-------+--------+--------------------+--------------------+
   | 虚拟商店 | 24    | 数字   | —                  | VariationStore     |
   |          |       |        |                    | 结构偏移，从 CFF2  |
   |          |       |        |                    | 表的开始。         |
   +----------+-------+--------+--------------------+--------------------+

`如果“head” <head>`__\ 表中的 unitsPerEm 值不是 1000，则需要 Top DICT
FontMatrix 运算符。如果 unitsPerEm 为 1000，则可以省略 FontMatrix
运算符。包含时，FontMatrix
操作数数组必须是\ ``1/unitsPerEm 0 0 1/unitsPerEm 0 0``.
上面显示的默认值假定 unitsPerEm 为 1000。

如果Font DICT INDEX 包含多个 Font
DICT，则需要\ **FDSelect运算符及其指向的结构，否则必须省略。**

如果存在变体数据，则需要\ **vstore**\ 运算符及其指向的数据，如果没有变体数据，则必须省略。

Top DICT、Font DICT、Private DICT 和 CharString 中的运算符前面最多可以有
513 个操作数。

8. 字符串索引
------------------------------------------

CharStrings INDEX 是一个包含字体中所有 CFF2 字形的 INDEX 结构。每个
CharString 提供一个字形的定义，并通过字形索引 (“GID”) 访问。第一个
CharString (GID 0) 必须是 .notdef 字形。CFF2 表中定义的字形数量可以从
CharString INDEX 计数字段中确定。\ `此字段的值必须与“maxp
” <maxp>`__\ 表中的 numGlyphs 字段的值匹配。

CFF2 数据的 CharString 数据格式以及解释方法是 CFF2 CharString
格式。这基于 Type 2 CharString
格式，不同之处仅在于添加了一些运算符，而删除了许多运算符。有关详细信息，请参阅\ `CFF2
CharString 格式 <cff2charstr>`__\ 一章。主要变化如下：

-  CFF2 CharStrings 不包含提前宽度的值。
-  对于 CFF2 表，CharStrings
   的填充规则必须始终是非零缠绕数规则，而不是奇偶规则。这是为了支持可变字体数据所必需的，在这种情况下，强制删除路径之间的重叠是不切实际的。
-  堆栈深度从 48 增加到 513。
-  CharString 运算符集在 CFF2 中扩展为包括\ **blend** (16)
   和\ **vsindex** (15) 运算符。这些运算符的工作方式如下所述，与等效的
   CFF2 Private DICT 运算符有关，在第 12 节，\ `OpenType
   字体变体的扩展中 <#variations>`__\ 。但是请注意，在 CharStrings
   中使用这些运算符的运算符代码与等效 CFF2 Private DICT
   运算符的运算符代码不同。
-  类型 2 运算符\ **endchar**\ 和\ **return**\ 被删除。
-  类型 2 逻辑、存储和数学运算符已删除。

CFF2 格式不包含字形名称或字形标记的 CID
值。然而，提供一些语义内容的字形标记对调试很有用，也可以用作派生编码信息的最后手段。CFF2
表的字形标记可以由 2.0 版“post”表中的 PostScript
字形名称表示。字形名称会增加字体的大小，并且是可选的。或者，字体可以使用
3.0 版的“post”表，它省略了字形名称。

9. 本地和全球子索引
------------------------------------------------------------

子例程（“subr”）通常是一个 CharString 字节序列，表示在字体的 CharString
数据中不止一个地方使用的子程序。一个 subr
可以存储一次，但可以通过使用一个调用子例程运算符从一个或多个 CharStrings
中多次引用，该运算符将要调用的 subr 的编号作为操作数。

一些 subrs 是\ *本地*\ 的；也就是说，它们包含在 Private DICT
中，并且可以通过与 Private Dict 关联的一组 CharString 访问。本地 subrs
包含在 INDEX 结构中；Private DICT 中 INDEX
的偏移量是使用\ **Subrs**\ 运算符指定的。CharString
通过\ **callsubr**\ 运算符在其 Private DICT 中引用本地 subr。

Subrs 也可以是\ *全局*\ 的，字体中的任何 CharString 都可以访问。全局
subrs 存储在 Global Subrs INDEX 中，该索引位于 Top DICT
数据之后。字体可能没有任何全局 subrs，在这种情况下 Global Subrs INDEX
为空。CharString 通过\ **callgsubr**\ 运算符引用全局 subr。

Subr 编号被一个称为“subr number bias”的数字倾斜，该数字是根据本地或全局
subr INDEX 中的子例程计数计算得出的。偏差计算如下：

.. code:: has-inner-focus

   uint16 bias;
   uint16 nSubrs = subrINDEX.count;
   if (nSubrs < 1240)
       bias = 107;
   else if (nSubrs < 33900)
       bias = 1131;
   else
       bias = 32768;

为了正确选择 subr，在访问适当的 subr INDEX 之前，必须将计算的偏差添加到
subr
编号操作数。此技术允许使用负数和正数指定子编号，从而充分利用可用的数字范围，从而节省空间。

10. Font DICT INDEX、Font DICTs 和 FDSelect。
-------------------------------------------------------------------------------------------------

Font DICT INDEX 包含一个或多个 FontDICT 结构。与 CID-keyed Type 1
字体不同，Font DICT INDEX 可能包含超过 256 个 Font DICT。

Font DICT 用于 CharStrings 使用的提示、变化或子例程 (subr)
数据。一个字体可以有一个 Font DICT，它适用于所有
CharString，或者它可以有多个 Font DICT，每个都适用于一组
CharString。实际提示或其他数据包含在私有 DICT 中。每个 Font DICT
结构都提供对 Private DICT 的引用。

表 10 字体 DICT 运算符条目
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ====== ==== ========= ==== ==========================================
   姓名   价值 操作数    默认 笔记
   ====== ==== ========= ==== ==========================================
   私人的 18   号码 号码 —    私有 DICT 大小和偏移量，从 CFF2 表的开始。
   ====== ==== ========= ==== ==========================================

本规范的早期版本记录了使用两字节运算符代码 12 7 的 Font DICT FontMatrix
运算符。在 CFF2 字体中不需要使用 Font DICT FontMatrix
运算符，现在已弃用。

如果有多个字体 DICT，则使用 FDSelect 表来提供有关哪个字体 DICT (“FD”)
用于哪些字形的信息。仅当有多个字体 DICTS 时才使用 FDSelect。

FDSelect 表的位置作为顶部 DICT
中\ **FDSelect运算符的操作数给出。**\ FDSelect 表通过为字形指定 FD
索引来将字体 DICT 与字形相关联。FD 索引用于访问存储在 Font DICT INDEX
中的 Font DICT 之一。当前定义了 FDSelect 表的三种格式，如下表所示。

表 11 FDSelect 格式 0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ===== =========== =============
   类型  姓名        描述
   ===== =========== =============
   uint8 格式        设置为 0
   uint8 fds [n字形] FD 选择器数组
   ===== =========== =============

fds 数组的每个元素代表 FDArray 中 Font DICT 的 FD 索引。当 FD
索引的顺序相当随机时，应使用此格式。字形 (nGlyphs) 的数量是 CharStrings
INDEX 中计数字段的值。

表 12 FDSelect 格式 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ====== =============== =========================
   类型   姓名            描述
   ====== =============== =========================
   uint8  格式            设置为 3
   uint16 范围            范围数
   范围3  范围3 [nRanges] Range3 记录数组（见下文）
   uint16 哨兵            哨兵GID
   ====== =============== =========================

Range3 记录的格式如下：

表 13 Range3 记录格式
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ====== ====== ========================
   类型   姓名   描述
   ====== ====== ========================
   uint16 第一的 范围内的第一个字形索引
   uint8  fd     范围内所有字形的 FD 索引
   ====== ====== ========================

每个 Range3 描述了一组具有相同 FD 索引的顺序
GID。每个范围包括从范围记录中的第一个 GID
到但不包括下一个范围记录的第一个 GID 的 GID。Range3
数组中的记录必须按第一个 GID 的升序排列。第一个范围的第一个 GID 必须为
0。哨兵 GID 跟在最后一个范围元素之后，用于分隔数组中的最后一个范围。标记
GID 设置为等于字体中字形的数量。也就是说，它的值比字体中的最后一个 GID
大 1。这种格式特别适用于有序的 FD 索引（通常情况下）。

   *注意：*\ 由于使用了哨兵GID来分隔数组中的最后一个范围，其编码为uint16的值不能超过值65535。因此，使用FDSelect
   Format3时编码的最后一个GID不能超过65534。

表 14 FDSelect 格式 4
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ====== =============== =========================
   类型   姓名            描述
   ====== =============== =========================
   uint8  格式            设置为 4
   uint32 范围            范围数
   范围4  范围4 [nRanges] Range4 记录数组（见下文）
   uint32 哨兵            哨兵GID
   ====== =============== =========================

格式 4 与格式 3 的不同之处仅在于它通过对 nRanges 和哨兵字段使用 uint32
类型以及 Range4 记录数组来容纳超过 65535 个字形。

Range4 记录的格式如下：

表 15 Range4 记录格式
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   ====== ====== ========================
   类型   姓名   描述
   ====== ====== ========================
   uint32 第一的 范围内的第一个字形索引
   uint16 fd     范围内所有字形的 FD 索引
   ====== ====== ========================

Range4 格式与 Range3 的不同之处仅在于它通过对第一个 GID 字段使用 uint32
并为 FD 索引使用 uint16 字段来容纳超过 65535 个字形。

   *注意：*\ 虽然 FDSelect 格式 4 允许超过 65535 个字形，但 OpenType
   格式的其他部分，例如“maxp”表的 numGlyphs 字段，仍被限制为 65535
   个字形。

11. 私人 DICT 数据
------------------------------------------------

在可能的情况下，表 16 中显示的私有 DICT 运算符的名称与相应的类型 1 dict
键相同。没有对应的 Type 1 dict 键的运算符在表 16 中用注释指示。

表 16 私有 DICT 运营商
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   +--------------+-------+----------------+----------+----------------+
   | 姓名         | 价值  | 操作数         | 默认     | 笔记           |
   +==============+=======+================+==========+================+
   | 蓝色价值观   | 6     | 三角洲         | —        |                |
   +--------------+-------+----------------+----------+----------------+
   | 其他蓝调     | 7     | 三角洲         | —        |                |
   +--------------+-------+----------------+----------+----------------+
   | 家庭蓝调     | 8     | 三角洲         | —        |                |
   +--------------+-------+----------------+----------+----------------+
   | 家庭其他蓝调 | 9     | 三角洲         | —        |                |
   +--------------+-------+----------------+----------+----------------+
   | 蓝标         | 12 9  | 数字           | 0.039625 |                |
   +--------------+-------+----------------+----------+----------------+
   | 蓝移         | 12 10 | 数字           | 7        |                |
   +--------------+-------+----------------+----------+----------------+
   | 蓝色绒毛     | 12 11 | 数字           | 1        |                |
   +--------------+-------+----------------+----------+----------------+
   | 标准硬件     | 10    | 数字           | —        |                |
   +--------------+-------+----------------+----------+----------------+
   | 标准大众汽车 | 11    | 数字           | —        |                |
   +--------------+-------+----------------+----------+----------------+
   | StemSnapH    | 12 12 | 三角洲         | —        |                |
   +--------------+-------+----------------+----------+----------------+
   | StemSnapV    | 12 13 | 三角洲         | —        |                |
   +--------------+-------+----------------+----------+----------------+
   | 语言组       | 12 17 | 数字           | 0        |                |
   +--------------+-------+----------------+----------+----------------+
   | 膨胀系数     | 12 18 | 数字           | 0.06     |                |
   +--------------+-------+----------------+----------+----------------+
   | 索引         | 22    | 数字           | 0        | VariationStore |
   |              |       |                |          | 结构表中的     |
   |              |       |                |          | ite            |
   |              |       |                |          | mVariationData |
   |              |       |                |          | 索引。         |
   +--------------+-------+----------------+----------+----------------+
   | 混合         | 23    | 增量，         | —        | 将             |
   |              |       | numberOfBlends |          | numberOfBlends |
   |              |       |                |          | 值留在         |
   |              |       |                |          | 操作数堆栈上。 |
   +--------------+-------+----------------+----------+----------------+
   | 子系统       | 19    | 数字           | —        | 从私有 DICT    |
   |              |       |                |          | 开始到本地子   |
   |              |       |                |          | 索引的偏移量。 |
   +--------------+-------+----------------+----------+----------------+

本地 subrs 偏移量相对于 Private DICT 数据的开头。

OtherBlues 和 FamilyOtherBlues 运算符必须分别出现在 BlueValues 和
FamilyBlues 运算符之后。

Private DICT
是必需的，但如果没有要存储的非默认值，则可以将其指定为大小为 0。

12. OpenType 字体变体的扩展
-------------------------------------------------------------------------------

为了支持 CFF2 表中的字形变化数据，以 CFF2
格式添加了三个新的运算符：\ **vsindex**\ 、\ **blend**\ 和\ **vstore**\ 。

可变字体保存代表几种不同设计变体的等效数据，并使用算法在这些设计之间进行插值或\ *混合*\ ，以得出一系列连续的设计实例。这允许整个字体系列由单个可变字体表示。例如，可变字体可能包含与一个系列中的
Light 和 Heavy 设计等效的数据，然后可以对这些数据进行插值以导出 Light 和
Heavy 之间连续范围内的任何粗细的实例。

有关 OpenType
字体变体的一般背景、用于支持可变字体的表格的详细信息、术语以及用于混合值以导出特定设计实例的插值算法规范，请参阅章节\ `OpenType
字体变体概述。 <otvaroverview>`__

CFF2 格式的可变字体的轮廓数据的构建与构建非可变 CFF2
表的方式非常相似，其结构和运算符与用于默认设计表示的结构和运算符完全相同。但是，无论在默认设计中出现的任何值，一个设计的单个值都会补充一组
delta
值，然后是\ **混合**\ 运算符。（为了提高效率，单个\ **混合**\ 运算符可能会跟随一系列这样的增量集，而不是在每个单独的集之后。）与其他
DICT
运算符不同，\ **混合**\ 在处理时不会清除堆栈。\ **混合**\ 运算符的结果保留在堆栈中，以供后续运算符处理。

在可变字体中，不同的字形可以使用不同的区域集和关联的增量值进行混合操作。处理给定字形时，解释器必须确定要使用的集合。\ *这些集合以ItemVariationStore*\ 结构存储在
CFF2 表中。ItemVariationStore 包含一个或多个\ *ItemVariationData
子表*\ ，每个子表都包含一个 Variation Regions
列表。当没有指定其他子表时，默认使用第一个 ItemVariationData 子表（索引
0）。当一组增量值需要默认的 ItemVariationData
子表时，\ **vsindex**\ 使用运算符。当在 Private DICT
中使用此运算符来设置非默认 itemVariationData 索引时，这不仅成为 Private
DICT 的默认 Item Variation Data 索引，而且还成为引用该 Private DICT
的所有 CharStrings 的默认 Item Variation Data
索引。当在\ **CharString**\ 中使用 vsindex 运算符时，它将取代私有 DICT
中的任何\ **vsindex**\ 。CFF2 表中的所有私有 DICT 和 CharString
共享同一个 ItemVariationStore。

字体变化的语法支持运算符。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**索引**
   ::

      |- ivs vsindex (22) |-

   选择要用于混合的 ItemVariationData 子表；ivs 参数是 ItemVariationData
   索引。使用时，\ **vsindex**\ 必须在\ **混合**\ 运算符之前。

   请注意，运算符代码 22 与等效的 CharStrings
   运算符不同。该运算符只能用于私有 DICT。

**混合**
   ::

      num(0)…num(n-1), delta(0,0)…delta(k-1,0),
      delta(0,1)…delta(k-1,1)…delta(0,n-1)…delta(k-1,n-1)
      n混合(23) val(0)…val(n-1)

   对于\ *k个区域，从n*(k + 1) 个*\ 操作数产生\ *n
   个*\ 插值结果值。有关更多信息和示例，请参阅CFF2 CharString
   格式章节中的第 4.5 节“\ `变体数据运算符”中对等价的 CharString
   运算符的描述。 <cff2charstr#section4.5>`__\ ` <cff2charstr#section4.5>`__

   请注意，运算符代码 23 与等效的 CharStrings
   运算符不同。此运算符只能用于专用 DICT。

**虚拟商店**
   ::

      |- 偏移vstore (24) |-

   提供 CFF2 表中 VariationStore 数据的偏移量。此运算符只能在 Top DICT
   中使用。

VariationStore 数据内容
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

VariationStore 数据由两部分组成：指定长度的 uint16 字段，后跟指定长度的
Item Variation Store 结构。Item Variation Store 格式在\ `OpenType Font
Variations Common Table
Formats <otvarcommonformats#IVS>`__\ 一章中指定。CFF2
表中使用的格式的简要说明如下。

为了支持字形或其他字体数据的变化，使用的信息包括特定数据项的默认值、一组用于修改默认值的增量调整值，以及字体变化空间内的一组区域，适用不同的
delta 值。Item Variation Store 格式旨在同时容纳区域集和增量值。在 CFF2
表中，Item Variation Store 用于表示不同的区域，但增量值在使用它们的
CharStrings 中交错。

一个 Item Variation Store
包含两个重要的列表。第一个列表是描述可变字体中使用的每个设计在变体空间中的影响区域的数据。这些中的每一个都称为\ *Variation
Region*\ 。Variation Regions 的整个列表称为\ *Variation Region List*\ 。

第二个列表是 ItemVariationData
结构的数组，每个结构指定一组变化区域，作为变化区域列表的索引列表。这允许不同的字形具有适用于不同区域集的增量值。通常只有一个
itemVariationData
结构，因此只有一组区域被所有字形使用。如果需要一组以上的区域，则添加
itemVariationData 结构来定义每个区域。vsindex\ **操作**\ 符可用于
Private DICT 为所有引用 Private DICT 的字形设置 itemVariationData
索引，或者当 CharString 需要使用与 Private DICT 中指定的不同的
ItemVariationData 结构时，它可用于特定的 CFF2 CharStrings .

在附录 A 中可以看到 CFF2 表中的 Variation Store 结构\ `示例。示例 CFF2
字体 <#appendixA>`__\ 。

附录 A 示例 CFF2 字体
-----------------------------------------------------------

本附录通过示例 CFF2 表说明了 CFF2 格式。

二进制转储（226 字节）：

::

   0000: 02 00 05 00 07 CF 0C 24 C3 11 9B 18 00 00 00 00
   0010: 00 26 00 01 00 00 00 0C 00 01 00 00 00 1C 00 01
   0020: 00 02 C0 00 E0 00 00 00 C0 00 C0 00 E0 00 00 00
   0030: 00 00 00 02 00 00 00 01 00 00 00 02 01 01 03 05
   0040：20 0A 20 0A 00 00 00 01 01 01 05 F7 06 DA 12 77
   0050: 9F F8 6C 9D AE 9A F4 9A 95 9F B3 9F 8B 8B 8B 8B
   0060: 85 9A 8B 8B 97 73 8B 8B 8C 80 8B 8B 8B 8D 8B 8B
   0070: 8C 8A 8B 8B 97 17 06 FB 8E 95 86 9D 8B 8B 8D 17
   0080: 07 77 9F F8 6D 9D AD 9A F3 9A 95 9F B3 9F 08 FB
   0090: 8D 95 09 1E A0 37 5F 0C 09 8B 0C 0B C2 6E 9E 8C
   00A0：17 0A DB 57 F7 02 8C 17 0B B3 9A 77 9F 82 8A 8D
   00B0: 17 0C 0C DB 95 57 F7 02 85 8B 8D 17 0C 0D F7 06
   00C0: 13 00 00 00 01 01 01 1B BD BD EF 8C 10 8B 15 F8
   00D0: 88 27 FB 5C 8C 10 06 F8 88 07 FC 88 EF F7 5C 8C
   00E0：10 06

分析：

.. container:: has-inner-focus

   +-----------------------+-----------------------+-----------------------+
   | 十六进制数据          | 资源                  | 注释                  |
   +-----------------------+-----------------------+-----------------------+
   |                       | **标题**              | CFF2 偏移量：0000 到  |
   |                       |                       | 0004                  |
   +-----------------------+-----------------------+-----------------------+
   | 02                    | 主要版本              | = 2                   |
   +-----------------------+-----------------------+-----------------------+
   | 00                    | 次要版本              | = 0                   |
   +-----------------------+-----------------------+-----------------------+
   | 05                    | 标头尺寸              | = 5                   |
   +-----------------------+-----------------------+-----------------------+
   | 00 07                 | 顶部字典大小          | = 7                   |
   +-----------------------+-----------------------+-----------------------+
   |                       | **顶级 DICT 数据**    | CFF2 偏移量：0005 到  |
   |                       |                       | 000B                  |
   +-----------------------+-----------------------+-----------------------+
   | CF 0C 24              | \|- 偏移\ **FDArray** | = 68 **FDArray**      |
   |                       | \|-                   | 字节 0C 24            |
   |                       |                       | 表示\                 |
   |                       |                       | **FDArray**\ 运算符。 |
   |                       |                       | 操作数字节是十六进制  |
   |                       |                       | CF = 十进制           |
   |                       |                       | 207，使用从 32 到 246 |
   |                       |                       | 的字节值的            |
   |                       |                       | 规则进行解码（参见表  |
   |                       |                       | 3，\ `操作数编码      |
   |                       |                       |  <#Table3>`__\ ）：b0 |
   |                       |                       | - 139。               |
   |                       |                       | 这给出了字体 DICT     |
   |                       |                       | 索引的偏移量：十进制  |
   |                       |                       | 68 = 十六进制44.      |
   +-----------------------+-----------------------+-----------------------+
   | C3 11                 | \|-                   | = 56 **CharStrings**  |
   |                       | 偏移                  | 字节 11               |
   |                       | \ **字符字符串**\ \|- | 代表\ **Ch            |
   |                       |                       | arStrings**\ 运算符。 |
   |                       |                       | 操作数字节是十六进制  |
   |                       |                       | C3，它是值 56         |
   |                       |                       | 的编码表示。          |
   |                       |                       | 这给出了 CharStrings  |
   |                       |                       | INDEX                 |
   |                       |                       | 的偏移量：十进制 56 = |
   |                       |                       | 十六进制 38。         |
   +-----------------------+-----------------------+-----------------------+
   | 9B 18                 | \|- 偏移\ **vstore**  | = 16 **vstore**       |
   |                       | \|-                   | 字节 18               |
   |                       |                       | 代表\                 |
   |                       |                       |  **vstore**\ 操作符。 |
   |                       |                       | 操作数字节是十六进制  |
   |                       |                       | 9B，它是值 16         |
   |                       |                       | 的编码表示。          |
   |                       |                       | 这给出了              |
   |                       |                       | VariationStore        |
   |                       |                       | 数据的偏移量：十进制  |
   |                       |                       | 16 = 十六进制 10。    |
   +-----------------------+-----------------------+-----------------------+
   |                       | **全球次级指数**      | CFF2 偏移：000C 到    |
   |                       |                       | 000F                  |
   +-----------------------+-----------------------+-----------------------+
   | 00 00 00 00           | 数数                  | =                     |
   |                       |                       | 空索引                |
   |                       |                       | ；没有表示其他字段。  |
   +-----------------------+-----------------------+-----------------------+
   |                       | **变化存储数据**      | CFF2 偏移量：0010 到  |
   |                       |                       | 0037                  |
   +-----------------------+-----------------------+-----------------------+
   | 00 26                 | 长度                  | = 38 — 后面的 Item    |
   |                       |                       | Variation Store       |
   |                       |                       | 结构的长              |
   |                       |                       | 度（以字节为单位）。  |
   +-----------------------+-----------------------+-----------------------+
   |                       | *                     | CFF2 偏移量：0012 到  |
   |                       | *ItemVariationStore** | 0037                  |
   +-----------------------+-----------------------+-----------------------+
   | 00 01                 | 格式                  | = 1                   |
   +-----------------------+-----------------------+-----------------------+
   | 00 00 00 0C           | 变化区域列表偏移      | = 12 — 从             |
   |                       |                       | ItemVariationStore    |
   |                       |                       | 开始的偏移            |
   |                       |                       | 量（以字节为单位）。  |
   +-----------------------+-----------------------+-----------------------+
   | 00 01                 | i                     | = 1 —                 |
   |                       | temVariationDataCount | ItemVariationData     |
   |                       |                       | 子表的数量。          |
   +-----------------------+-----------------------+-----------------------+
   | 00 00 00 1C           | itemVa                | = 28 — 从             |
   |                       | riationDataOffsets[0] | ItemVariationStore    |
   |                       |                       | 开始到                |
   |                       |                       | ItemVariationData     |
   |                       |                       | 子表 0                |
   |                       |                       | 的偏移                |
   |                       |                       | 量（以字节为单位）。  |
   +-----------------------+-----------------------+-----------------------+
   |                       | **变异区域列表**      | CFF2 偏移量：001E 到  |
   |                       |                       | 002D                  |
   +-----------------------+-----------------------+-----------------------+
   | 00 01                 | 轴数                  | = 1                   |
   +-----------------------+-----------------------+-----------------------+
   | 00 02                 | 区域计数              | = 2                   |
   +-----------------------+-----------------------+-----------------------+
   |                       | **变化区域[0]**       | CFF2 偏移量：0022 到  |
   |                       |                       | 0027                  |
   +-----------------------+-----------------------+-----------------------+
   |                       | **区域轴[0]**         | CFF2 偏移量：0022 到  |
   |                       |                       | 0027                  |
   +-----------------------+-----------------------+-----------------------+
   | C0 00                 | 起始坐标              | = -1.0（F2DOT14 值）  |
   +-----------------------+-----------------------+-----------------------+
   | E0 00                 | 峰值坐标              | = -0.5（F2DOT14 值）  |
   +-----------------------+-----------------------+-----------------------+
   | 00 00                 | 结束坐标              | = 0.0（F2DOT14 值）   |
   +-----------------------+-----------------------+-----------------------+
   |                       | **变异地区[1]**       | CFF2 偏移量：0028 到  |
   |                       |                       | 002D                  |
   +-----------------------+-----------------------+-----------------------+
   |                       | **区域轴[0]**         | CFF2 偏移量：0028 到  |
   |                       |                       | 002D                  |
   +-----------------------+-----------------------+-----------------------+
   | C0 00                 | 起始坐标              | = -1.0（F2DOT14 值）  |
   +-----------------------+-----------------------+-----------------------+
   | C0 00                 | 峰值坐标              | = -1.0（F2DOT14 值）  |
   +-----------------------+-----------------------+-----------------------+
   | E0 00                 | 结束坐标              | = -0.5（F2DOT14 值）  |
   +-----------------------+-----------------------+-----------------------+
   |                       | **ItemVariationData   | CFF2 偏移量：002E 到  |
   |                       | 子表 0**              | 0037                  |
   +-----------------------+-----------------------+-----------------------+
   | 00 00                 | 项目计数              | = 0                   |
   +-----------------------+-----------------------+-----------------------+
   | 00 00                 | 短增量计数            | = 0                   |
   +-----------------------+-----------------------+-----------------------+
   | 00 02                 | 区域索引计数          | = 2                   |
   +-----------------------+-----------------------+-----------------------+
   | 00 00 00 01           | 区域索引[]            | = {0, 1}              |
   +-----------------------+-----------------------+-----------------------+
   |                       | **字符串索引**        | CFF2 偏移量：0038 到  |
   |                       |                       | 0043                  |
   +-----------------------+-----------------------+-----------------------+
   | 00 00 00 02           | 数数                  | = 2                   |
   +-----------------------+-----------------------+-----------------------+
   | 01                    | 尺寸                  | = 1                   |
   +-----------------------+-----------------------+-----------------------+
   | 01 03 05              | 抵消[]                | = {1, 3, 5}（元素数为 |
   |                       |                       | count + 1）           |
   +-----------------------+-----------------------+-----------------------+
   |                       | **字符串 0**          | CFF2 偏移量：0040 到  |
   |                       |                       | 0041                  |
   +-----------------------+-----------------------+-----------------------+
   | 20 0A                 | \|- subr#             | = -107 **callsubr**   |
   |                       | **callsubr** \|-      | 字节 0A               |
   |                       |                       | 代表\ **callsubr**\   |
   |                       |                       |  运算符。操作数字节是 |
   |                       |                       | 20，它是值 -107       |
   |                       |                       | 的编码表示。          |
   +-----------------------+-----------------------+-----------------------+
   |                       | **字符串 1**          | CFF2 偏移量：0042 到  |
   |                       |                       | 0043                  |
   +-----------------------+-----------------------+-----------------------+
   | 20 0A                 | \|- subr#             | = -107 **callsubr**   |
   |                       | **callsubr** \|-      | 字节 0A               |
   |                       |                       | 代表\ **callsubr**\   |
   |                       |                       |  运算符。操作数字节是 |
   |                       |                       | 20，它是值 -107       |
   |                       |                       | 的编码表示。          |
   +-----------------------+-----------------------+-----------------------+
   |                       | **字体 DICT 索引**    | CFF2 偏移量：0044 到  |
   |                       |                       | 004E                  |
   +-----------------------+-----------------------+-----------------------+
   | 00 00 00 01           | 数数                  | = 1                   |
   +-----------------------+-----------------------+-----------------------+
   | 01                    | 尺寸                  | = 1                   |
   +-----------------------+-----------------------+-----------------------+
   | 01 05                 | 抵消[]                | = {1, 5}（元素数为    |
   |                       |                       | count + 1）           |
   +-----------------------+-----------------------+-----------------------+
   |                       | **字体 DICT 0**       | CFF2 偏移量：004B 到  |
   |                       |                       | 004E                  |
   +-----------------------+-----------------------+-----------------------+
   | F7 06 DA 12           | \|-                   | = 114 79 **Private**  |
   |                       | 大                    | 字节 12               |
   |                       | 小偏移\ **私有**\ \|- | 表示\ **Private*      |
   |                       |                       | *\ 运算符。操作数字节 |
   |                       |                       | F7 06 是值 114        |
   |                       |                       | 的                    |
   |                       |                       | 编码表示。操作数字节  |
   |                       |                       | DA 是值 79            |
   |                       |                       | 的编码表示。          |
   |                       |                       | 这给出了 Private DICT |
   |                       |                       | 的                    |
   |                       |                       | 大小和偏移量：大小为  |
   |                       |                       | 114 字节，偏移量（从  |
   |                       |                       | CFF2 表的开头) 为 79  |
   |                       |                       | 字节（十六进制 4F）。 |
   +-----------------------+-----------------------+-----------------------+
   |                       | **私人 DICT**         | CFF2 偏移量：004F 到  |
   |                       |                       | 00C0                  |
   +-----------------------+-----------------------+-----------------------+
   | 77 9F F8 6C 9D AE 9A  | \|- num\*\ **混合**   | = -20 20 472 18 35 15 |
   | F4 9A 95 9F B3 9F 8B  | **BlueValues** \|-    | 105 15 10 20 40 20 0  |
   | 8B 8B 8B 85 9A 8B 8B  |                       | 0 0 0 -6 15 0 0 12    |
   | 97 73 8B 8B 8C 80 8B  |                       | -24 0 0 1 -11 0 0 0 2 |
   | 8B 8B 8D 8B 8B 8C 8A  |                       | 0 0 1 -1 0 0          |
   | 8B 8B 97 17 06        |                       | 12\ **混合**          |
   |                       |                       | **BlueValues**        |
   |                       |                       | 字节 06               |
   |                       |                       | 表示\ **BlueV         |
   |                       |                       | alues**\ 运算符。字节 |
   |                       |                       | 17                    |
   |                       |                       | 表示混                |
   |                       |                       | 合运算符。操作数字节  |
   |                       |                       | 77.. 97 是值 -20...   |
   |                       |                       | 12 的编码表示。       |
   +-----------------------+-----------------------+-----------------------+
   | FB 8E 95 86 9D 8B 8B  | \|- num\* **blend**   | = -250 10 -5 18 0 0 2 |
   | 8D 17 07              | **OtherBlues** \|-    | **blend**             |
   |                       |                       | **OtherBlues**        |
   |                       |                       | 字节 07               |
   |                       |                       | 代表\ **Other         |
   |                       |                       | Blues**\ 运算符。字节 |
   |                       |                       | 17                    |
   |                       |                       | 表示\ **混合*         |
   |                       |                       | *\ 运算符。操作数字节 |
   |                       |                       | FB.. 8D 是值 -250...  |
   |                       |                       | 2 的编码表示。        |
   +-----------------------+-----------------------+-----------------------+
   | 77 9F F8 6D 9D AD 9A  | \|- num\*             | = -20 20 473 18 34 15 |
   | F3 9A 95 9F B3 9F 08  | **FamilyBlues** \|-   | 104 15 10 20 40 20    |
   |                       |                       | **FamilyBlues**       |
   |                       |                       | 字节 08               |
   |                       |                       | 代表运算符\ **Family  |
   |                       |                       | Blues**\ 。操作数字节 |
   |                       |                       | 77...9F 是值 -20...20 |
   |                       |                       | 的编码表示。          |
   +-----------------------+-----------------------+-----------------------+
   | FB 8D 95 09           | \|- num\*             | = -249 10             |
   |                       | **FamilyOtherBlues**  | **FamilyOtherBlues**  |
   |                       | \|-                   | 字节 09 代表          |
   |                       |                       | FamilyOtherBlues      |
   |                       |                       | 运算符。操作数字节 FB |
   |                       |                       | 8D 是值 -249          |
   |                       |                       | 的                    |
   |                       |                       | 编码表示。操作数字节  |
   |                       |                       | 95 是值 10            |
   |                       |                       | 的编码表示。          |
   +-----------------------+-----------------------+-----------------------+
   | 1E A0 37 5F 0C 09     | \|- num **BlueScale** | = 0.0375              |
   |                       | \|-                   | **BlueScale**         |
   |                       |                       | 字节 0C 09            |
   |                       |                       | 代表\ **BlueScale*    |
   |                       |                       | *\ 运算符。操作数字节 |
   |                       |                       | 1E A0 37 5F 是值      |
   |                       |                       | 0.0375 的编码表示。   |
   +-----------------------+-----------------------+-----------------------+
   | 8B 0C 0B              | \|- num **BlueFuzz**  | = 0\ **蓝色模糊**\ 。 |
   |                       | \|-                   | 字节 0C 0B            |
   |                       |                       | 代表\ **BlueFuzz*     |
   |                       |                       | *\ 运算符。操作数字节 |
   |                       |                       | 8B 是值 0             |
   |                       |                       | 的编码表示。          |
   +-----------------------+-----------------------+-----------------------+
   | C2 6E 9E 8C 17 0A     | \|- num\* **blend**   | = 55 -29 19 1         |
   |                       | **StdHW** \|-         | **blend** **StdHW**   |
   |                       |                       | 字节 0A               |
   |                       |                       | 表示\ **              |
   |                       |                       | StdHW**\ 运算符。字节 |
   |                       |                       | 17                    |
   |                       |                       | 表示\ **混合*         |
   |                       |                       | *\ 运算符。操作数字节 |
   |                       |                       | C2 6E 9E 8C 是值 55   |
   |                       |                       | -29 19 1 的编码表示。 |
   +-----------------------+-----------------------+-----------------------+
   | DB 57 F7 02 8C 17 0B  | \|- num\* **blend**   | = 80 -52 110 1        |
   |                       | **StdVW** \|-         | **blend** **StdVW**   |
   |                       |                       | 字节 0B               |
   |                       |                       | 表示\ **              |
   |                       |                       | StdVW**\ 运算符。字节 |
   |                       |                       | 17                    |
   |                       |                       | 表示\ **混合*         |
   |                       |                       | *\ 运算符。操作数字节 |
   |                       |                       | DB 57 F7 02 8C 是值   |
   |                       |                       | 80 -52 110 1          |
   |                       |                       | 的编码表示。          |
   +-----------------------+-----------------------+-----------------------+
   | B3 9A 77 9F 82 8A 8D  | \|- num\*\ **混合**   | = 40 15 -20 20 -9 -1  |
   | 17 0C 0C              | **StemSnapH** \|-     | 2 **blend**           |
   |                       |                       | **StemSnapH**         |
   |                       |                       | 字节 0C 0C            |
   |                       |                       | 表示\ **Stem          |
   |                       |                       | SnapH**\ 运算符。字节 |
   |                       |                       | 17                    |
   |                       |                       | 表示\ **混合*         |
   |                       |                       | *\ 运算符。操作数字节 |
   |                       |                       | B3 9A 77 9F 82 8A 8D  |
   |                       |                       | 是值 40 15 -20 20 -9  |
   |                       |                       | -1 2 的编码表示。     |
   +-----------------------+-----------------------+-----------------------+
   | DB 95 57 F7 02 85 8B  | \|- num\*\ **混合**   | = 80 10 -52 110 -6 0  |
   | 8D 17 0C 0D           | **StemSnapV** \|-     | 2 **blend**           |
   |                       |                       | **StemSnapV**         |
   |                       |                       | 字节 0C 0D            |
   |                       |                       | 表示\ **Stem          |
   |                       |                       | SnapV**\ 运算符。字节 |
   |                       |                       | 17                    |
   |                       |                       | 表示\ **混合*         |
   |                       |                       | *\ 运算符。操作数字节 |
   |                       |                       | DB 95 57 F7 02 85 8B  |
   |                       |                       | 8D 是值 80 10 -52 110 |
   |                       |                       | -6 0 2 的编码表示。   |
   +-----------------------+-----------------------+-----------------------+
   | F7 06 13              | \|-**订阅人数**\ \|-  | = 114 **Subrs**       |
   |                       |                       | 字节 13               |
   |                       |                       | 表示\ **Subrs*        |
   |                       |                       | *\ 运算符。操作数字节 |
   |                       |                       | F7 06 是值 114        |
   |                       |                       | 的编码表示。          |
   |                       |                       | 这给出了本地 Subr     |
   |                       |                       | INDEX                 |
   |                       |                       | 的偏移量（从私有 DICT |
   |                       |                       | 的开头）：114         |
   |                       |                       | 字节（十六进制 72）。 |
   +-----------------------+-----------------------+-----------------------+
   |                       | **本地子索引**        | CFF2 偏移量：00C1 到  |
   |                       |                       | 00E1                  |
   +-----------------------+-----------------------+-----------------------+
   | 00 00 00 01           | 数数                  | = 1                   |
   +-----------------------+-----------------------+-----------------------+
   | 01                    | 尺寸                  | = 1                   |
   +-----------------------+-----------------------+-----------------------+
   | 01 1B                 | 抵消[]                | = {1, 27}（元素数为   |
   |                       |                       | count + 1）           |
   +-----------------------+-----------------------+-----------------------+
   |                       | **子 0**              | CFF2 偏移量：00C8 到  |
   |                       |                       | 00E1                  |
   +-----------------------+-----------------------+-----------------------+
   | BD BD EF 8C 10 8B 15  | \|-                   | = 50 50 100 1         |
   |                       | num\*\ **混合**\ num  | **blend** 0           |
   |                       | **rmoveto** \|-       | **rmoveto**           |
   |                       |                       | 字节 15               |
   |                       |                       | 表示\ **rmoveto**     |
   |                       |                       | CharString            |
   |                       |                       | 运算符。字节 10       |
   |                       |                       | 表示\                 |
   |                       |                       |  **混合**\ CharString |
   |                       |                       | 运算符。操作数字节 BD |
   |                       |                       | BD EF 8C 是值 50 50   |
   |                       |                       | 100 1                 |
   |                       |                       | 的                    |
   |                       |                       | 编码表示。操作数字节  |
   |                       |                       | 8B 是值 0             |
   |                       |                       | 的编码表示。          |
   +-----------------------+-----------------------+-----------------------+
   | F8 88 27 FB 5C 8C 10  | \|- num\* **blend**   | = 500 -100 -200 1     |
   | 06                    | **hlineto** \|-       | **blend** **hlineto** |
   |                       |                       | 字节 06               |
   |                       |                       | 表示\ **hlineto**     |
   |                       |                       | CharString            |
   |                       |                       | 运算符。字节 10       |
   |                       |                       | 表示\                 |
   |                       |                       |  **混合**\ CharString |
   |                       |                       | 运算符。操作数字节 F8 |
   |                       |                       | 88 27 FB 5C 8C 是值   |
   |                       |                       | 500 -100 -200 1       |
   |                       |                       | 的编码表示。          |
   +-----------------------+-----------------------+-----------------------+
   | F8 88 07              | \|- num **vlineto**   | = 500 **vlineto**     |
   |                       | \|-                   | 字节 07               |
   |                       |                       | 表示\ **vlineto**     |
   |                       |                       | CharString            |
   |                       |                       | 运算符。操作数字节 F8 |
   |                       |                       | 88 是值 500           |
   |                       |                       | 的编码表示。          |
   +-----------------------+-----------------------+-----------------------+
   | FC 88 EF F7 5C 8C 10  | \|- num\* **blend**   | = -500 100 200 1      |
   | 06                    | **hlineto** \|-       | **blend** **hlineto** |
   |                       |                       | 字节 06               |
   |                       |                       | 表示\ **hlineto**     |
   |                       |                       | CharString            |
   |                       |                       | 运算符。字节 10       |
   |                       |                       | 表示\                 |
   |                       |                       |  **混合**\ CharString |
   |                       |                       | 运算符。操作数字节 FC |
   |                       |                       | 88 EF F7 5C 8C 是值   |
   |                       |                       | -500 100 200 1        |
   |                       |                       | 的编码表示。          |
   +-----------------------+-----------------------+-----------------------+

附录 B 相关文档
---------------------------------------------------------

有关 Adob​​e 字体技术的更多信息，请参阅以下文档。所有这些都可以在\ `Adob​​e
Font Technical
Notes <http://www.adobe.com/devnet/font.html>`__\ 中找到。

-  紧凑字体格式规范 #5176
-  Type 2 CharString 格式 #5177
-  使用 OpenType 字体变体为字体生成 PostScript 名称 #5902

附录 C CFF2 DICT 编码
------------------------------------------------------------

表 17 单字节 CFF2 DICT 运算符
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   +------------+----------+------------------+---------------------+
   | 十二月     | 十六进制 | 操作员           | 笔记                |
   +------------+----------+------------------+---------------------+
   | 0 到 5     | 00 至 05 | <保留>           |                     |
   +------------+----------+------------------+---------------------+
   | 6          | 06       | **蓝色价值观**   |                     |
   +------------+----------+------------------+---------------------+
   | 7          | 07       | **其他蓝调**     |                     |
   +------------+----------+------------------+---------------------+
   | 8          | 08       | **家庭蓝调**     |                     |
   +------------+----------+------------------+---------------------+
   | 9          | 09       | **家庭其他蓝调** |                     |
   +------------+----------+------------------+---------------------+
   | 10         | 0a       | **标准硬件**     |                     |
   +------------+----------+------------------+---------------------+
   | 11         | 0b       | **标准大众汽车** |                     |
   +------------+----------+------------------+---------------------+
   | 12         | 0c       | 逃脱             | 2                   |
   |            |          |                  | 字节运              |
   |            |          |                  | 算符的第一个字节。  |
   +------------+----------+------------------+---------------------+
   | 13 至 16   | 0d 到 10 | <保留>           |                     |
   +------------+----------+------------------+---------------------+
   | 17         | 11       | **字符串**       |                     |
   +------------+----------+------------------+---------------------+
   | 18         | 12       | **私人的**       |                     |
   +------------+----------+------------------+---------------------+
   | 19         | 13       | **子系统**       |                     |
   +------------+----------+------------------+---------------------+
   | 20 至 21   | 14 至 15 | <保留>           |                     |
   +------------+----------+------------------+---------------------+
   | 22         | 16       | **索引**         |                     |
   +------------+----------+------------------+---------------------+
   | 23         | 17       | **混合**         |                     |
   +------------+----------+------------------+---------------------+
   | 24         | 18       | **虚拟商店**     |                     |
   +------------+----------+------------------+---------------------+
   | 25 至 27   | 19 至 1b | <保留>           |                     |
   +------------+----------+------------------+---------------------+
   | 28         | 1c       | <数字>           | 指定有符号整数值的  |
   |            |          |                  | 3                   |
   |            |          |                  | 字节序列的第一个字  |
   |            |          |                  | 节（后面两个字节是  |
   |            |          |                  | int16）。           |
   +------------+----------+------------------+---------------------+
   | 29         | 1天      | <数字>           | 指定有符号整数值的  |
   |            |          |                  | 5                   |
   |            |          |                  | 字                  |
   |            |          |                  | 节序列的第一个字节  |
   |            |          |                  | （后面的四个字节是  |
   |            |          |                  | int32）。           |
   +------------+----------+------------------+---------------------+
   | 30         | 1e       | **BCD**          |                     |
   +------------+----------+------------------+---------------------+
   | 31         | 1f       | <保留>           |                     |
   +------------+----------+------------------+---------------------+
   | 32 至 246  | 20 到 f6 | <数字>           |                     |
   +------------+----------+------------------+---------------------+
   | 247 至 254 | f7 到 fe | <数字>           | 指定数字的 2        |
   |            |          |                  | 字节                |
   |            |          |                  | 序列的第一个字节。  |
   +------------+----------+------------------+---------------------+
   | 255        | ff       | <保留>           |                     |
   +------------+----------+------------------+---------------------+

..

   *注意：*\ 操作符代码 25 (0x19)
   之前被指定为\ **maxstack**\ 操作符。这在 CFF2
   字体中从未被要求并且不再受支持。

表 18 两字节 CFF2 DICT 运算符
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   =============== ============== =============
   十二月          十六进制       操作员        
   12 0 至 12 6    0c 00 到 0c 06 <保留>        
   12 7            0c 07          **字体矩阵**  
   12 8            0c 08          <保留>        
   12 9            0c 09          **蓝标**      
   12 10           0c 0a          **蓝移**      
   12 11           0c 0b          **蓝色绒毛**  
   12 12           0c 0c          **StemSnapH** 
   12 13           0c 0d          **StemSnapV** 
   12 14 至 12 16  0c 0e 到 0c 10 <保留>        
   12 17           0c 11          **语言组**    
   12 18           0c 12          **膨胀系数**  
   12 19 至 12 35  0c 13 到 0c 23 <保留>        
   12 36           0c 24          **FDArray**   
   12 37           0c 25          **FD选择**    
   12 38 至 12 255 0c 26 到 0c ff <保留>        
   =============== ============== =============

..

   *注意：* FontMatrix 运算符可在 Top DICT 中使用，但不推荐在 Font DICT
   中使用。

附录 D 从 CFF 1.0 起的变化
------------------------------------------------------------------

D1。表名和版本
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

具有 CFF2
字体数据的字体必须使用表格标签“CFF2”，并且表格主要版本必须设置为 2。

D2。DICT 布局
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

从 CFF2 表中删除了以下 CFF 1.0 表：

-  名称索引。CFF2 表不包含 PostScript 名称。此外，CFF2 格式不支持
   FontSet。从 CFF2 表创建 CFF 1.0 实例快照时，可以从“名称”表中的名称 ID
   6 值复制 PostScript
   字体名称。对于可变字体，它必须通过为可变字体指定的启发式方法以及“fvar”和
   STAT 表中的信息导出。请参阅 Adob​​e 技术说明 5902，\ `PostScript Name
   Generation for Fonts Using OpenType Font Variations
   #5902 <https://adobe-type-tools.github.io/font-tech-notes/pdfs/5902.AdobePSNameGeneration.pdf>`__\ 。
-  顶级 DICT 索引。由于 CFF2 格式不支持 FontSet，因此只能有一个 Top
   DICT。
-  字符串表。如果需要，字形名称可以在“post”表中提供。
-  编码表。CFF2 表仅从“cmap”表中获取编码信息。
-  字符集表。不再使用。字形标识符来自“post”表。

INDEX 的计数字段是 uint32 而不是 uint16。

CFF2 标头与 CFF 1.0 标头的不同之处在于第 4 个字段现在表示 Top DICT
数据结构的长度。有关详细信息，请参阅第 6 节，\ `标题 <#header>`__\ 。

Top DICT 数据紧随标题数据之后开始。CFF2格式的固定数据布局顺序为：

-  标题
-  顶级 DICT 数据
-  全球次级指数

通过 TopDICT 或 Private DICT 中指定的偏移量访问以下 INDEX 表：

-  FD选择
-  字符串索引
-  变化存储数据
-  字体 DICT 索引
-  私人 DICT
-  本地子指数

D3。顶级 DICT 数据
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

顶级 DICT 不直接引用私有 DICT。相反，它使用 FDArray
运算符来引用始终存在的 Font DICT INDEX。字体 DICT
索引将始终包含至少一个字体 DICT。如果 Font DICT INDEX 包含多个 Font
DICT，则 Top DICT 还必须引用 FDSelect 结构。

添加了一个新的顶级 DICT 运算符：\ **vstore**\ 。有关详细信息，请参阅第
12 节，\ `OpenType 字体变体的扩展 <#variations>`__\ 。

可以从其他 OpenType 表派生或不再使用的顶级 DICT 运算符已全部从 CFF2
格式规范中删除。在 CFF2
表中使用这些运算符是无效的；如果遇到，它们必须被忽略。

CFF2 表中允许的唯一 CFF 1 Top DICT 运算符如下：

-  **FontMatrix** (12 7) 数组
-  **CharStrings** (17) 偏移量
-  **FDArray** (12 36) 偏移量
-  **FDSelect** (12 37) 偏移量

下表列出了 CFF2 中不支持的 CFF 1 Top DICT 运算符，以及有关 CFF2
字体中替代机制的详细信息：

表 19 CFF 1 未在 CFF2 中使用的顶级 DICT 运算符
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   +---------------------+----------------+-----------------------------+
   | 姓名                | 代码（十进制） | CFF2 等效                   |
   +=====================+================+=============================+
   | **版本**            | 0              | 等效于“head”表中的          |
   |                     |                | fontRevision 字段。CFF      |
   |                     |                | 1\ **版本**\ 的操作数可以从 |
   |                     |                | fontRevision                |
   |                     |                | 字段派生，这是一个 16.16    |
   |                     |                | 固定值，并将其格式化为具有  |
   |                     |                | 三个小数位精度的十进制数。  |
   +---------------------+----------------+-----------------------------+
   | **注意**            | 1              | 等效于“名称”表中字符        |
   |                     |                | 串的串联：版权字符串（名称  |
   |                     |                | ID                          |
   |                     |                | 0）、一个                   |
   |                     |                | 空格，后跟商标字符串（名称  |
   |                     |                | ID 7）。                    |
   +---------------------+----------------+-----------------------------+
   | **全名**            | 2              | 等效于“                     |
   |                     |                | 名称”表中的全名字符串（名称 |
   |                     |                | ID 4）。                    |
   +---------------------+----------------+-----------------------------+
   | **姓**              | 3              | 等效于“姓名                 |
   |                     |                | ”表中的印刷姓氏字符串（姓名 |
   |                     |                | ID                          |
   |                     |                | 16），如果存在              |
   |                     |                | ，则等效于姓氏字符串（姓名  |
   |                     |                | ID 1）。                    |
   +---------------------+----------------+-----------------------------+
   | **重量**            | 4              | 等效于 OS/2 表中的          |
   |                     |                | usWeightClass 字段。        |
   +---------------------+----------------+-----------------------------+
   | **字体框**          | 5              | 大约相当于“head”表中        |
   |                     |                | xMin、xMax、yMin 和 yMax    |
   |                     |                | 字段的                      |
   |                     |                | 组合。这些只是近似值，因为  |
   |                     |                | 它们仅用于默认值，但如果为  |
   |                     |                | CFF 1                       |
   |                     |                | 解释器派生值，则足够准      |
   |                     |                | 确。一些解释器使用这些值来  |
   |                     |                | 影响全局着色的提示，一些解  |
   |                     |                | 释器使用它来设置展平参数。  |
   +---------------------+----------------+-----------------------------+
   | **版权**            | 12 0           | 等效于“                     |
   |                     |                | 名称”表中的版权字符串（名称 |
   |                     |                | ID 0）。                    |
   +---------------------+----------------+-----------------------------+
   | **IsFixedPitch**    | 12 1           | 等效于“post”表中的          |
   |                     |                | isFixedPitch 字段。         |
   +---------------------+----------------+-----------------------------+
   | **斜体角度**        | 12 2           | 等效于“post”表中的          |
   |                     |                | italicAngle 字段。          |
   +---------------------+----------------+-----------------------------+
   | **下划线位置**      | 12 3           | 等效于“post”表中的          |
   |                     |                | underlinePosition 字段。    |
   +---------------------+----------------+-----------------------------+
   | **下划线厚度**      | 12 4           | 等效于“post”表中的          |
   |                     |                | underlineThickness 字段。   |
   +---------------------+----------------+-----------------------------+
   | **油漆类型**        | 12 5           | CFF2                        |
   |                     |                | 字体中没有等价物。如果派生  |
   |                     |                | CFF 1 兼容数据，请使用 CFF  |
   |                     |                | 1 默认值零。                |
   +---------------------+----------------+-----------------------------+
   | **笔画宽度**        | 12 8           | CFF2 字体中没有等价物。在   |
   |                     |                | CFF 1 字体中，它仅用于      |
   |                     |                | PaintType 2。如果派生 CFF 1 |
   |                     |                | 兼容数据，则应使用          |
   |                     |                | PaintType 0。               |
   +---------------------+----------------+-----------------------------+
   | **合成基础**        | 12 20          | CFF2 字体中没有等价物。     |
   +---------------------+----------------+-----------------------------+
   | **后记**            | 12 21          | CFF2 字体中没有等价物。CFF  |
   |                     |                | 1 允许嵌入 PostScript       |
   |                     |                | 代码，但这仅在 CFF 1        |
   |                     |                | OpenType 字体中用于在 Top   |
   |                     |                | DICT 中提供 FSType          |
   |                     |                | 键，以携带来自 OS/2 表的    |
   |                     |                | fsType                      |
   |                     |                | 字                          |
   |                     |                | 段的字体嵌入权限。如果派生  |
   |                     |                | CFF 1 兼容数据，则可以从    |
   |                     |                | OS/2 表中复制该值。         |
   +---------------------+----------------+-----------------------------+
   | **基本字体名称**    | 12 22          | CFF2 字体中没有等价物。     |
   +---------------------+----------------+-----------------------------+
   | **BaseFontBlend**   | 12 23          | CFF2 字体中没有等价物。     |
   +---------------------+----------------+-----------------------------+
   | **活性氧**          | 12 30          | CFF2                        |
   |                     |                | 字体中没有等价物。如果从在  |
   |                     |                | Font DICT INDEX 中具有多个  |
   |                     |                | Font DICT 的 CFF2           |
   |                     |                | 可变字体生成 CFF 1          |
   |                     |                | 兼容字体实例，则必须将 CFF  |
   |                     |                | 1 字体写入 CID              |
   |                     |                | 键控字体。使用的 ROS 应该是 |
   |                     |                | Adob​​e                       |
   |                     |                | -Identity-0。这会将所有字形 |
   |                     |                | ID 映射到具有相同值的       |
   |                     |                | CI                          |
   |                     |                | D，并且不携带任何语义内容。 |
   +---------------------+----------------+-----------------------------+
   | **CIDFontVersion**  | 12 31          | CFF2                        |
   |                     |                | 字体中没有等价物。如果派生  |
   |                     |                | CFF 1 兼容数据，请使用 CFF  |
   |                     |                | 1 默认值零。                |
   +---------------------+----------------+-----------------------------+
   | **CIFFontRevision** | 12 32          | CFF2                        |
   |                     |                | 字体中没有等价物。如果派生  |
   |                     |                | CFF 1 兼容数据，请使用 CFF  |
   |                     |                | 1 默认值零。                |
   +---------------------+----------------+-----------------------------+
   | **CIDFontType**     | 12 33          | CFF2                        |
   |                     |                | 字体中没有等价物。如果派生  |
   |                     |                | CFF 1 兼容数据，请使用 CFF  |
   |                     |                | 1 默认值零。                |
   +---------------------+----------------+-----------------------------+
   | **CIDCount**        | 12 34          | 等效于“maxp”表中的          |
   |                     |                | numGlyphs 字段。            |
   +---------------------+----------------+-----------------------------+
   | **用户标识符库**    | 12 35          | 不再需要 -                  |
   |                     |                | 请参阅有                    |
   |                     |                | 关\ **UniqueID**\ 的评论。  |
   +---------------------+----------------+-----------------------------+
   | **唯一身份**        | 13             | 不再需                      |
   |                     |                | 要：这最初用于缓存打印机中  |
   |                     |                | 的字体。但是，许多具有冲突  |
   |                     |                | UnicodeID                   |
   |                     |                | 值的第三方字                |
   |                     |                | 体使其不可靠。更重要的是，  |
   |                     |                | 性能测试表明字体缓存在打印  |
   |                     |                | 时不再提供显着的性能改进。  |
   +---------------------+----------------+-----------------------------+
   | **徐ID**            | 14             | 不再需要 -                  |
   |                     |                | 请参阅有                    |
   |                     |                | 关\ **UniqueID**\ 的评论。  |
   +---------------------+----------------+-----------------------------+
   | **字符集**          | 15             | 如果需要，字形名称可以在    |
   |                     |                | 2.0 版“发布”表中表示。      |
   +---------------------+----------------+-----------------------------+
   | **编码**            | 16             | 等效于“cmap”表。            |
   +---------------------+----------------+-----------------------------+
   | **私人的**          | 18             | 不再需要：在 CFF2           |
   |                     |                | 字体中，始终从 Font DICT    |
   |                     |                | INDEX 中的 Font DICT 引用   |
   |                     |                | Private DICT。              |
   +---------------------+----------------+-----------------------------+

D4。私人 DICT 数据
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

添加了两个可用于私有 DICT
的新运算符：\ **vsindex**\ 和\ **blend**\ 。有关更多信息，请参阅第 12
节，\ `OpenType 字体变体扩展 <#variations>`__\ 的扩展。

CFF2 中不使用不再使用或在其他 OpenType 表中具有现有等效项的私有 DICT
运算符。在 CFF2
表中使用这些运算符是无效的；如果遇到，它们必须被忽略。下表列出了 CFF2
中不支持的 CFF 1 Private DICT 运算符，以及有关 CFF2
字体中替代机制的详细信息：

表 20 CFF 1 未在 CFF2 中使用的私有 DICT 运算符
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: has-inner-focus

   +---------------+----------------+-----------------------------------+
   | 姓名          | 代码（十进制） | CFF2 等效                         |
   +===============+================+===================================+
   | **默认宽度X** | (20)           | CFF2 表中 CharStrings             |
   |               |                | 的水平字形度量是从“hmtx”和 HVAR   |
   |               |                | 表中获得的                        |
   +---------------+----------------+-----------------------------------+
   | **标称宽度X** | (21)           | CFF2 表中 CharStrings             |
   |               |                | 的水平字形度量是从“hmtx”和 HVAR   |
   |               |                | 表中获得的                        |
   +---------------+----------------+-----------------------------------+

附录 E 自早期版本以来的变化
------------------------------------------------------------------------------

自 OpenType 1.8 首次发布以来，已进行了以下更改和修订。

-  初始发布：OpenType 1.8（2016 年 9 月）。请参阅附录 D，从 CFF 1.0
   开始的更改。
-  OpenType 1.8.1（2017 年 1 月）：

   -  数据类型 Card8、Card16 和 Card32 被 uint8、uint16 和 uint32
      替换，以匹配 OpenType 规范的其余部分的使用。
   -  所有对 FontSet 的引用均已删除或改写（CFF2 不支持 FontSet）。
   -  在表 2，CFF2 数据类型中，为 uint32 添加了一个条目。
   -  在第 4 节中，DICT
      数据、操作数和运算符的描述进行了修订，并更正了表引用。
   -  在第 4 节“操作数类型”的表 6 中，删除了布尔类型（在 CFF2
      中未使用）。
   -  在第 5 节 INDEX Data 中，将空 INDEX 的大小更正为 4 个字节。
   -  在第 7 节，顶部 DICT
      数据中，添加了最大堆栈深度的允许范围，并说明它仅影响 Private DICT
      和 CFF2 CharString 运算符的堆栈深度。
   -  第 8 节，字形组织，合并到下一节。
   -  在第 8 节（之前的第 9 节）中，CharStrings INDEX
      对文本进行了重新措辞以提高清晰度，并添加了关于字形名称和字形 ID
      的段落。
   -  在第 9 节（之前的第 10
      节）中，本地和全局子索引，为了更清楚起见，对文本进行了重新措辞，并删除了关于子编号偏差节省空间的详细讨论。
   -  在第 10 节（之前的第 11 节）中，Font DICT INDEX、Font DICTs 和
      FDSelect 对文本进行了重新措辞以提高清晰度；增加了一个注释，一个
      Font DICT INDEX 可以包含超过 256 个 Font
      DICT；修复了哨兵字形ID的描述；并且删除了对 FontName 的引用（此 CFF
      1 运算符未在 CFF2 中使用）。
   -  在第 11 节（以前的第 12 节），私有 DICT
      数据中，删除了有关提前宽度的段落。
   -  在第 12 节（之前的第 13
      节）中，\ **混合**\ 运算符示例被替换为对“CFF2 CharString
      格式”一章第 4.5 节中提供的示例的引用。
   -  在附录 A，示例 CFF2 字体中，添加了 CFF2 字体数据的示例。
   -  在附录 C，CFF2 DICT 编码中，进行了格式更改。
   -  在附录 D，CFF 1.0 的变化中，文本在不同的地方被重新措辞。
   -  在附录 D 的 D2 部分，DICT 布局中，添加了关于 INDEX
      计数字段类型的注释，并更正了表引用。
   -  在附录 D 的 D3 部分，Top DICT Data 中，CharStringType
      已从支持的运算符列表中删除，并添加了有关支持的运算符的详细信息。此外，在
      CFF 1
      **ROS**\ 运算符的描述中，“Adobe-Identity-1”更改为“Adobe-Identity-0”。还进行了其他格式更改。
   -  在附录 D 的 D4 节中，ForceBold 和 initialRandomSeed 已从 CFF2
      中未使用的 CFF 1 运算符列表中删除，并进行了其他格式更改。
   -  删除了附录 D 的 D5 节，CharString 数据，以及 D6 节，外部表。
   -  为了术语的一致性，进行了许多更改，例如“CharString”、“VariationStore”、“CFF2”的一致大小写和拼写，以及在比“FDArray”更合适的地方使用“Font
      DICT INDEX”。

-  OpenType 1.8.2（2017 年 7 月）：

   -  限制使用 Top DICT FontMatrix 运算符（第 7 节），不推荐使用 Font
      DICT FontMatrix 运算符（第 10 节，附录 C）。
   -  更正了保留的两字节 DICT 运算符的数值范围中的错误（附录 C）。
   -  删除了 maxstack 运算符。（在第一个 CFF2
      规范中无意中引入，但从未被要求。）
   -  编辑修订。
